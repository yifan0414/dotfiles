set -g mouse on
set-option -g prefix C-a
unbind-key C-b
setw -g mode-keys vi
set -g set-clipboard on


# -- 修复在wsl中复制乱码的bug https://github.com/tmux-plugins/tmux-yank/issues/144
if-shell '[ -n "$WSL_DISTRO_NAME" ] && command -v powershell.exe >/dev/null 2>&1' {
  set -g @override_copy_command \
  'customclip(){ local STDIN=$(cat -); powershell.exe -command "Set-Clipboard" -Value "$STDIN"; }; customclip'
}

# -- copy-mode mapping -------------------------------------------------------------------
run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'

# run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'

run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'

run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'


bind-key -T copy-mode-vi DoubleClick1Pane select-pane\; send-keys -X select-word
bind-key -T copy-mode-vi TripleClick1Pane select-pane\; send-keys -X select-line

# disable "release mouse drag to copy and exit copy-mode", ref: https://github.com/tmux/tmux/issues/140
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# since MouseDragEnd1Pane neither exit copy-mode nor clear selection now,
# let single click do selection clearing for us.
bind-key -T copy-mode-vi MouseDown1Pane select-pane\; send-keys -X clear-selection

# this line changes the default binding of MouseDrag1Pane, the only difference
# is that we use `copy-mode -eM` instead of `copy-mode -M`, so that WheelDownPane
# can trigger copy-mode to exit when copy-mode is entered by MouseDrag1Pane
# bind -n MouseDrag1Pane if -Ft= '#{mouse_any_flag}' 'if -Ft= \"#{pane_in_mode}\" \"copy-mode -eM\" \"send-keys -M\"' 'copy-mode -eM'

# -- Bind config --------------------------------------------------------------
# bind b list-buffers     # list paste buffers
bind p paste-buffer -p  # paste from the top paste buffer
bind b choose-buffer    # choose which buffer to paste from
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one
# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2
# exchange " and %

bind % split-window -v
bind '"' split-window -h


bind-key -n -N 'Toggle popup window' M-3 if-shell -F '#{==:#{session_name},popup}' {
    detach-client
} {
    display-popup -d "#{pane_current_path}" -xC -yC -w 85% -h 80% -E 'tmux attach-session -t popup || tmux new-session -s popup'
}


# -- special config for quitting qemu

bind-key -T prefix x send-keys C-a x

# -- set config ---------------------------------------------------------------
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"
# set -g status off
set -g status-bg black
set -g status-fg white

# -- copy the text in tmux ----------------------------------------------------
set -g @yank_with_mouse off
set -g @yank_action 'copy-pipe' # or 'copy-pipe-and-cancel' for the default

# -- cancel the character ---------------------------------------------
set -sg escape-time 1

#Enable oh my zsh in tmux
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
# set -g @plugin 'christoomey/vim-tmux-navigator'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'
# 设置鼠标滚动速度
# 设置鼠标滚动大小
set -g @scroll-speed-num-lines-per-scroll 3
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
