set -g mouse on
set-option -g prefix C-a
unbind-key C-b
setw -g mode-keys vi
set -g set-clipboard on

# -- copy-mode mapping -------------------------------------------------------------------
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'H' send -X start-of-line
bind-key -T copy-mode-vi 'L' send -X end-of-line

bind-key -T copy-mode-vi DoubleClick1Pane select-pane\; send-keys -X select-word
bind-key -T copy-mode-vi TripleClick1Pane select-pane\; send-keys -X select-line

# disable "release mouse drag to copy and exit copy-mode", ref: https://github.com/tmux/tmux/issues/140
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# since MouseDragEnd1Pane neither exit copy-mode nor clear selection now,
# let single click do selection clearing for us.
bind-key -T copy-mode-vi MouseDown1Pane select-pane\; send-keys -X clear-selection

# -- Bind config --------------------------------------------------------------
# bind b list-buffers     # list paste buffers
bind p paste-buffer -p  # paste from the top paste buffer
bind b choose-buffer    # choose which buffer to paste from
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one
# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# toggle status bar visibility
bind-key -n M-: set-option -g status

# create window
bind-key -n M-n next-window
bind-key -n M-c new-window

# rename window
bind-key -n M-E command-prompt -I '#W' 'rename-window "%%%"'
set-window-option -g automatic-rename off

# break off pane to a new window
bind-key -n M-u \
  command-prompt -p 'break-pane:' -I '#W' \
    'break-pane ; rename-window "%%%"'
bind-key -n M-U break-pane

# focus window
bind-key -n M-H previous-window
bind-key -n M-L next-window

# focus by number
set-option -g base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on
bind-key -n M-0 choose-window
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :1 \; select-window -t :-1

# create pane (below, above, left, right)
bind-key -n M-- split-window -c '#{pane_current_path}'
# bind-key -n M-A split-window -c '#{pane_current_path}' -b
# bind-key -n M-O split-window -c '#{pane_current_path}' -b -h
bind-key -n M-\\ split-window -c '#{pane_current_path}'    -h
bind-key -n "M-'" last-window

# select-pane
# bind-key -n M-h select-pane -L
# bind-key -n M-l select-pane -R
# bind-key -n M-j select-pane -D
# bind-key -n M-k select-pane -U
bind-key -n M-o last-pane
bind-key -n M-z display-panes
bind-key -n M-w choose-window -Z
set -g display-panes-time 2000

# zoom pane
bind-key -n M-p resize-pane -Z

# monitor window
set-option -g visual-activity on
set-option -g visual-silence on

bind-key R source ~/.tmux.conf \; display-message 'config reloaded!'

# set M-p open/close popup window
bind-key -n -N 'Toggle popup window' M-q if-shell -F '#{==:#{session_name},popup}' {
    detach-client
} {
    display-popup -d "#{pane_current_path}" -xC -yC -w 90% -h 95% -E 'tmux attach-session -t popup || tmux new-session -s popup'
}


# -- special config for quitting qemu
bind-key -T prefix x send-keys C-a x

# search buffer using copy mode
bind-key -n M-/ copy-mode \;\
  command-prompt -p 'search-backward (press up):' \
    -i 'send-keys -X search-backward-incremental "%%%"'

# search colored buffer using less
bind-key -n M-?                           \
  capture-pane -e -J -S - \;              \
  new-window -n '#S:#I.#P' -a '           \
    tmux save-buffer - \; delete-buffer | \
    less -R                               \
  ' \;                                    \
  run-shell 'tmux send-keys G \?'

bind-key -n M-[ copy-mode

bind-key -T copy-mode-vi / command-prompt -p 'search-backward:' -I '#{pane_search_string}' -i 'send-keys -X search-backward-incremental "%%%"'
bind-key -T copy-mode-vi ? command-prompt -p 'search-forward:' -I '#{pane_search_string}' -i 'send-keys -X search-forward-incremental "%%%"'


# 将 M-h 绑定到：在popup窗口中直接打开fzf的man页面

# bind-key -n -N 'Toggle popup window' M-h if-shell -F '#{==:#{session_name},popup}' {
#     detach-client
# } {
#     send-keys -t popup "q" C-m M-l "man -k . | fzf | awk '{print \$1}' | xargs man" C-m 
#     display-popup -d "#{pane_current_path}" -xC -yC -w 90% -h 85% -E 'tmux attach-session -t popup || tmux new-session -s popup'
# }

# -- set config ---------------------------------------------------------------
# set -g default-terminal "screen-256color"
# set -ga terminal-overrides ",*256col*:Tc"

set -g default-terminal "tmux-256color"
set -as terminal-overrides ',xterm-256color:Tc'


set -g popup-border-style "bg=default fg=#54546d"
set -g popup-border-lines rounded
# set -g pane-border-style "fg=#54546d"
# set -g pane-active-border-style "bg=default fg=cyan"
# set -g status off
set -g status-bg black
set -g status-fg white

# allow Vim to recieve modifier keys: Shift, Control, Alt
set-window-option -g xterm-keys on

# -- copy the text in tmux ----------------------------------------------------
set -g @yank_with_mouse off
set -g @yank_action 'copy-pipe' # or 'copy-pipe-and-cancel' for the default

# -- cancel the character ---------------------------------------------
# prevent tmux from catching modifier keys meant for Vim
# (set > 0: https://github.com/microsoft/WSL/issues/5931)
set -sg escape-time 1

#Enable oh my zsh in tmux
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'

# set -g @plugin 'sunaku/tmux-navigate'
# set -g @navigate-back  '-n M-\'
# set -g @navigate-left  '-n M-h'
# set -g @navigate-up    '-n M-k'
# set -g @navigate-down  '-n M-j'
# set -g @navigate-right '-n M-l'

set -g @plugin 'christoomey/vim-tmux-navigator'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'
# 设置鼠标滚动速度
# 设置鼠标滚动大小
set -g @scroll-speed-num-lines-per-scroll 3
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
